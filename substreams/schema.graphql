type Token @entity(immutable: false) {
    id: ID!
    name: String!
    symbol: String!
    decimals: BigInt!
    totalSupply: BigInt!
    tokenDeployment: TokenDeployment @derivedFrom(field: "token")
    tokenTransfers: [TokenTransfer!] @derivedFrom(field: "token")
    tokenHolders: [TokenHolder!] @derivedFrom(field: "token")
}

type TokenDeployment @entity(immutable: false) {
    id: ID!
    blocknumber: BigInt!
    timestamp: BigInt!
    # txHash: String
    token: Token 
}

type TokenTransfer @entity(immutable: true) {
    id: ID!
    from: String!
    to: String!
    amount: BigInt!
    count: BigInt!
    volume: BigInt!
    token: Token
    blocknumber: BigInt!
    timestamp: BigInt!
    tokenHolderTo: TokenHolder
    tokenHolderFrom: TokenHolder
}

type TokenHolder @entity(immutable: false) {
    id: ID!
    holderAddress: String!
    tokenHolderSnapshots: [TokenHolderSnapshot!] @derivedFrom(field: "tokenHolder")
    transfersTo: [TokenTransfer!] @derivedFrom(field: "tokenHolderTo")
    transfersFrom: [TokenTransfer!] @derivedFrom(field: "tokenHolderFrom")
    token: Token
    timestamp: BigInt!
}

type TokenHolderSnapshot @entity(immutable: false) {
    id: ID!
    tokenHolder: TokenHolder
    balance: BigInt!
    transferVolume: BigInt!
    transferCount: BigInt!
    timestamp: BigInt!
    monthId: BigInt!
}

type Nft @entity(immutable: false) {
    id: ID!
    name: String
    symbol: String
    tokenUri: String
    nftDeployment: NftDeployment @derivedFrom(field: "nft")
    nftTransfers: [NftTransfer!] @derivedFrom(field: "nft")
    nftHolders: [NftHolder!] @derivedFrom(field: "nft")
    nftTokens: [NftToken!] @derivedFrom(field: "nft")
}

type NftDeployment @entity(immutable: false) {
    id: ID!
    blocknumber: BigInt!
    timestamp: BigInt!
    # txHash: String
    nft: Nft
}

type NftTransfer @entity(immutable: true) {
    id: ID!
    from: String!
    to: String!
    tokenId: String!
    volume: BigInt!
    nft: Nft
    blocknumber: BigInt!
    timestamp: BigInt!
    nftHolderTo: NftHolder
    nftHolderFrom: NftHolder
}

type NftHolder @entity(immutable: false) {
    id: ID!
    holderAddress: String!
    nftHolderSnapshots: [NftHolderSnapshot!] @derivedFrom(field: "nftHolder")
    transfersTo: [NftTransfer!] @derivedFrom(field: "nftHolderTo")
    transfersFrom: [NftTransfer!] @derivedFrom(field: "nftHolderFrom")
    nft: Nft
    timestamp: BigInt!
}

type NftHolderSnapshot @entity(immutable: false) {
    id: ID!
    nftHolder: NftHolder
    tokenBalance: BigInt!
    timestamp: BigInt!
    monthId: BigInt!
}

type NftToken @entity(immutable: false) {
    id: ID!
    address: String!
    tokenId: String!
    volume: BigInt!
    nft: Nft
    timestamp: BigInt!
}